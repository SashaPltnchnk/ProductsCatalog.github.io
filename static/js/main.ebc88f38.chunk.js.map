{"version":3,"sources":["components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/Navbar.js","components/Products/LeaveFeedback.js","components/Products/Feedback.js","components/Products/ProductInfo.js","components/Products/ProductsList.js","components/Auth/Auth.js","components/dashboard/Dashboard.js","components/Auth/isAuth.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","logOut","localStorage","clear","_this","props","checkStateIsAuthed","react_default","a","createElement","className","onClick","this","Component","SignedOutLinks","Link","to","Navbar","isAuthorized","Navbar_SignedInLinks","Navbar_SignedOutLinks","LeaveFeedback","state","rate","text","leaveComment","axios","defaults","headers","common","Authorization","concat","getItem","post","id","then","res","console","log","getComments","setState","catch","err","handleChange","e","target","value","handleSubmit","preventDefault","_this2","Array","fill","map","item","index","key","onSubmit","name","onChange","htmlFor","Feedback","feedback","get","data","Products_LeaveFeedback","reverse","created_by","username","ProductInfo","params","src","alt","title","Products_Feedback","ProductsList","activeProduct","showCatalog","showProductInfo","Products_ProductInfo","find","Auth","password","error","Object","defineProperty","handleClick","_this$state","authPath","success","setItem","token","history","push","message","buttonName","type","Dashboard","Fragment","Route","path","render","routerProps","components_Auth_Auth","assign","Products_ProductsList","App","BrowserRouter","components_Navbar_Navbar","dashboard_Dashboard","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebc88f38.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass SignedInLinks extends Component {\r\n    logOut = () => {\r\n        localStorage.clear()\r\n        this.props.checkStateIsAuthed()\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"right\">\r\n          <button className=\"btn purple darken-3\" onClick={this.logOut}>Log Out</button>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SignedInLinks","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import Auth from '../Auth/Auth'\r\n\r\nclass SignedOutLinks extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"right\">\r\n        <button className=\"btn purple darken-3\"><Link to ='/login' >Log In</Link></button>\r\n        <button className=\"btn purple darken-3\"><Link to ='/register' >Register</Link></button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React, { Component } from 'react'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n          <div className=\"container\">\r\n              <Link to='/' className=\"brand-logo\">Mr. Robot</Link>\r\n              {\r\n                  this.props.isAuthorized \r\n                  ? <SignedInLinks checkStateIsAuthed={this.props.checkStateIsAuthed} />\r\n                  : <SignedOutLinks />\r\n              }\r\n          </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass LeaveFeedback extends Component {\r\n    state = {\r\n        rate: 0,\r\n        text: '',\r\n    }\r\n\r\n    leaveComment = () => {\r\n      axios.defaults.headers.common = { Authorization: `Token ${localStorage.getItem('token')}`}    \r\n      axios.post(`https://smktesting.herokuapp.com/api/reviews/${this.props.id}`, this.state)\r\n        .then(res => {\r\n            console.log(`Success, ${res}`)\r\n            this.props.getComments()\r\n            this.setState({ rate: 0, text: ''})\r\n        })\r\n        .catch(err => console.log(`Something went wrong${err}`))\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (e) => {\r\n      this.setState({ text: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Leave a comment:</h3>\r\n        {\r\n          !this.props.isAuthorized \r\n          ? <span className=\"red-text\">You have to registate or to log in to have a possibility of leaving comments</span>\r\n          : <div>\r\n                <span>Rate: </span>\r\n                {\r\n                    new Array(5).fill(0).map((item, index) => {\r\n                        return (\r\n                        <button className={`btn purple lighten-3 waves-effect waves-purple rate-button ${this.state.rate === index + 1 ? 'active' : ''}`} key={index} onClick={() => this.setState({ rate: index+1})}>{index+1}</button>\r\n                        )\r\n                    })\r\n                }\r\n                <form onSubmit={this.handleSubmit}>    \r\n                    <div className=\"input-field\">\r\n                        <textarea  id=\"textarea1\" className=\"materialize-textarea\" name=\"text\" value={this.state.text} onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"textarea1\">Write your comment</label>\r\n                    </div>\r\n                    <button className=\"btn purple accent-4\" onClick={this.leaveComment}>Leave a comment</button> \r\n                </form>\r\n            </div> \r\n      \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LeaveFeedback","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport LeaveFeedback from './LeaveFeedback'\r\n\r\nclass Feedback extends Component {\r\n    state = {\r\n        feedback: null\r\n    }\r\n\r\n    getComments = () => {\r\n        axios.get(`https://smktesting.herokuapp.com/api/reviews/${this.props.id}`)\r\n        .then(res => {\r\n            this.setState({ feedback: res.data })\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getComments()\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeaveFeedback isAuthorized={this.props.isAuthorized} getComments={this.getComments} id={this.props.id}/>\r\n        <h3>Comments:</h3>\r\n        {\r\n            this.state.feedback === null\r\n            ? null\r\n            : this.state.feedback.reverse().map(item => {\r\n                return (\r\n                    <div className=\"feedback\" key={item.id}>\r\n                        <div><span className=\"purple-text\">Rate: </span>{item.rate}</div>\r\n                        <div><span className=\"purple-text\">Comment: </span>{item.text}</div>\r\n                        <div><span className=\"purple-text\">Leaved by: </span>{item.created_by.username}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Feedback","import React, { Component } from 'react'\r\nimport Feedback from './Feedback'\r\n\r\nclass ProductInfo extends Component {\r\n  render() {\r\n    \r\n    const { params } = this.props\r\n    return (\r\n        <div className=\"fg1\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 right\">\r\n                    <div className=\"card center\">\r\n                        <div className=\"card-image col m6\">\r\n                            <img className=\"full-image\" src={`https://smktesting.herokuapp.com/static/img${params.id}.png`} alt={params.title}/>                    \r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <h3>{params.title}</h3>\r\n                            <p>{params.text}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col s12 m12\">\r\n                <Feedback id={params.id} isAuthorized={this.props.isAuthorized} />\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductInfo","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport ProductInfo from './ProductInfo';\r\n\r\nclass ProductsList extends Component {\r\n    state = {\r\n        data: null,\r\n        activeProduct: null\r\n    }\r\n\r\n    showCatalog = () => {\r\n        axios.get(`https://smktesting.herokuapp.com/api/products/`)\r\n        .then( (res) => {\r\n           this.setState({data: res.data}) })\r\n        .catch(res => console.log(`Something went wrong${res}`))\r\n    }\r\n\r\n    showProductInfo = (id) => {\r\n        this.setState({ activeProduct: id})\r\n    }\r\n\r\n  render() {\r\n      const {data} = this.state\r\n    return (\r\n        <div className=\"section d-flex\">\r\n            <div className=\"d-flex space-between fdc\">\r\n                <button className=\"btn purple darken-1\" onClick={this.showCatalog}>Open catalog</button>\r\n                {/*  */}\r\n                {\r\n                    !this.state.data \r\n                    ? <div className=\"preloader-wrapper active\">\r\n                        <div className=\"spinner-layer spinner-green\">\r\n                            <div className=\"circle-clipper left\">\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                            <div className=\"gap-patch\">\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                            <div className=\"circle-clipper right\">\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                    : data.map(item => (\r\n                        <button className=\"btn purple lighten-2\" onClick={() => this.showProductInfo(item.id)} key={item.id}>{item.title}</button>\r\n                    ))\r\n                }\r\n            </div>\r\n                {\r\n                    this.state.activeProduct == null\r\n                    ? null\r\n                    : <ProductInfo \r\n                        isAuthorized={this.props.isAuthorized}\r\n                        params={this.state.data.find(item => item.id === this.state.activeProduct)}\r\n                        />\r\n                    \r\n                }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductsList","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Auth extends Component {\r\n     state = {\r\n         username: '',\r\n         password: '',\r\n         error: null\r\n     }\r\n     \r\n     handleChange = (e) => {\r\n       this.setState({ [e.target.id]: e.target.value })\r\n     }\r\n\r\n     handleClick = () => {\r\n        const { username, password } = this.state\r\n        axios.post(`httpss://smktesting.herokuapp.com/api/${this.props.authPath}/`, { username, password })\r\n        .then( (res) => {\r\n            if(res.data.success) {\r\n                localStorage.setItem('token', res.data.token)\r\n                this.props.history.push('/')\r\n                // debugger\r\n                this.props.checkStateIsAuthed()\r\n            } else {\r\n                this.setState({ error: res.data.message })\r\n            }\r\n            \r\n        })\r\n        .catch(res => console.log(`Something went wrong${res}`))\r\n     }\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n    \r\n  render() {\r\n      const { buttonName } = this.props\r\n    return (\r\n      <div className=\"container\">   \r\n          {\r\n              this.state.error\r\n              ? <h4 className=\"red-text\">!!! {this.state.error} </h4>\r\n              : null\r\n          }    \r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h3 className=\"grey-text text-darken-3\">{buttonName}</h3>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input value={this.state.username} type=\"text\" id=\"username\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input value={this.state.password} type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button  className=\"btn purple darken-3\" onClick={this.handleClick}>{buttonName}</button>\r\n            </div>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Auth","import React from 'react'\r\nimport ProductList from '../Products/ProductsList'\r\nimport Auth from '../Auth/Auth'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst Dashboard = props => {\r\n  return (\r\n    <div className=\"dashboard container\">\r\n        <div className=\"column\">\r\n            {\r\n              props.isAuthorized\r\n              ? null\r\n              : (\r\n                <React.Fragment>\r\n                  <Route path='/login' render={routerProps => <Auth \r\n                                                        {...routerProps} \r\n                                                        buttonName={'Log In'} \r\n                                                        authPath={'login'} \r\n                                                        checkStateIsAuthed={props.checkStateIsAuthed} \r\n                                                        />} \r\n                  />\r\n                  <Route path='/register' render={routerProps => <Auth \r\n                                                            {...routerProps} \r\n                                                            buttonName={'Register'} \r\n                                                            authPath={'register'} \r\n                                                            checkStateIsAuthed={props.checkStateIsAuthed} \r\n                                                            />} \r\n                  />\r\n                </React.Fragment>\r\n              )\r\n            }\r\n            <ProductList isAuthorized={props.isAuthorized}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","export const isAuthorized = () => {\r\n    return !!localStorage.getItem('token')\r\n}","import React, { Component } from 'react'\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport { isAuthorized } from './components/Auth/isAuth'\n\nclass App extends Component {\n  state = {\n    isAuthorized: isAuthorized()\n  }\n\n  checkStateIsAuthed = () => {\n    this.setState({ isAuthorized: isAuthorized() })\n    console.log(isAuthorized());\n    \n  }\n\n  render() {\n    // debugger\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar isAuthorized={this.state.isAuthorized} checkStateIsAuthed={this.checkStateIsAuthed} />\n          <Dashboard isAuthorized={this.state.isAuthorized} checkStateIsAuthed={this.checkStateIsAuthed} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}